#!/bin/bash

# usage: download <url> <command>...

# this script downloads into a sandbox directory, moves the result file, and 
# calls `req -p dispatch -f ...` on each milestone:
#
# -f download-prepare
# -f download-waiting
# -f download-error or -f download-success

url="$1"
shift
exe="$1"

function REQ {
  # default arguments
  req -p dispatch -a download_url="$url" -a download_agent="$exe" "$@"
}

tmpname="$(date "+%s")-$$"
mkdir "$tmpname"
cd "$tmpname"
download_dir="$(pwd)"

REQ -f download-prepare -a download_dir="$download_dir" "$download_dir"

"$@" &
pid="$!"

REQ -f download-waiting -a download_dir="$download_dir" -a download_pid="$pid" "$pid"

wait
exitcode="$?"
file="$(ls)"
cd -

if test "$exitcode" != "0" ; then
  error="nonzero exitcode"
elif test -z "$file" ; then
  error="no file"
elif test -r "$file" ; then
  error="collision"
  result="$download_dir/$file"
else
  mv "$download_dir/$file" "$file"
  result="`pwd`/$file"
fi

rmdir "$tmpname" 2> /dev/null

if test -n "$error" ; then
  REQ -f download-error -a exitcode="$exitcode" -a download_error="$error" "$result"
else
  REQ -f download-success -a download_file="$result" "$result"
fi
